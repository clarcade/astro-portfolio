---
import type { MainNavigationLinksMetadata } from '../types/MainNavigationLinkTypes';
import Button from './Button.astro';
import Icon from './Icon.astro';
import ThemeSwitcher from './ThemeSwitcher.astro';

interface Props {
	hideContactCta?: boolean;
	mainNavigationMetadata: MainNavigationLinksMetadata;
}

const {
	hideContactCta = false,
	mainNavigationMetadata: {
		selectedLinkByPath,
		links,
	},
} = Astro.props;
---

<!-- This will be a spacer in the DOM -->
<div class="my-header-placeholder"></div>

<!-- This will be fixed at the top of page -->
<div class='my-header'>
	<header class='header'>
		<div class="header__mobile-items">
			<Button
				id='mobile-menu-button'
				class='header__mobile-menu-button'
				type='quiet'
			>
				<Icon icon='menu-hamburger' />
			</Button>
			<div class='header__mobile-logo-container'>
				<Icon icon='kokopelli-with-laptop' />
			</div>
		</div>

		<div class='header__contact-me'>
			{!hideContactCta && (
				<Button
					id='contact-me'
					type='link--primary'
					link='/contact'
				>
					Contact me
				</Button>
			)}
		</div>

		<div class='header__theme-switcher'>
			<ThemeSwitcher id='theme-switcher' />
		</div>

		<nav class='header__nav'>
			<ul class='header__nav__list'>
				{links.map(({label: linkLabel, link}, index) => (
					<li class='header__nav__list-item'>
						<a
							class:list={[
								'header__nav__link',
								{
									'header__nav__link--selected': link === selectedLinkByPath,
								},
							]}
							href={link}
						>{linkLabel}</a>

						{index !== links.length - 1 && (
							<div class='header__nav__divider' />
						)}
					</li>
				))}
			</ul>
		</nav>
	</header>
</div>

<script>

	import {
		drawerAndStatusMap,
		setDrawerStatus,
	} from '../stores/drawer-store';

	// Get DOM Elements
	const mobileMenuButtonElement = document.getElementById('mobile-menu-button');
	const contactMeButtonLinkElement = document.getElementById('contact-me') as HTMLAnchorElement;

	if (mobileMenuButtonElement) {
		const toggleMobileNavSidebar = () => {
			const leftNavDrawerId = 'leftnav-drawer';
			const newStatus = drawerAndStatusMap.get()[leftNavDrawerId] === 'open'
				? 'close'
				: 'open';

			setDrawerStatus({
				drawerId: leftNavDrawerId,
				status: newStatus,
			});
		};

		// TODO: Add events for touch/keyboard events
		mobileMenuButtonElement.addEventListener('click', toggleMobileNavSidebar);
	}

	if (contactMeButtonLinkElement) {
		const contactMeButtonLinkHandler = (event: any) => {
			event.preventDefault();

			// TODO: Add analytics
			console.log('log analytics for contact cta');
			// Mock for doing actual analytics work
			// setTimeout(() => {
			window.location.href = contactMeButtonLinkElement.href;
			// }, 500);
		};

		// TODO: Add events for touch/keyboard events
		contactMeButtonLinkElement.addEventListener('click', contactMeButtonLinkHandler);
	}

</script>

<style lang='scss'>

	@use '../styles/breakpoints';
	@use '../styles/colors';
	@use '../styles/globalPageStyling';
	@use '../styles/typography';

	.my-header-placeholder {
		height: globalPageStyling.$header-height--mobile;
		margin-bottom: globalPageStyling.$header-placeholder-margin-bottom;
		width: 100%;
	}

	.my-header {
		background-color: var(--gray-250);
		display: flex;
		height: globalPageStyling.$header-height--mobile;
		justify-content: center;
		position: fixed;
		top: 0;
		width: 100%;
		z-index: 1;
	}

	.header {
		align-items: center;
		display: grid;
		grid-template-columns: auto 1fr auto;
		grid-template-rows: 1fr;
		grid-template-areas: "left center right";
		max-width: globalPageStyling.$page-width-for-breakpoint--768;
		width: 100%;

		&__mobile-items {
			align-items: center;
			display: flex;
			grid-area: left;
		}

		&__mobile-logo-container {
			align-items: center;
			display: flex;

			:global(svg) {
				fill: var(--red-50);
				height: 30px;
				width: 30px;
			}
		}

		:global(.header__mobile-menu-button) {
			align-items: center;
			display: flex;
			justify-content: center;
			padding: 15px;
			cursor: pointer;

			:global(svg) {
				:global(path) {
					stroke: var(--gray-100);
				}
			}

			&:hover {
				:global(svg) {
					:global(path) {
						stroke: var(--gray-0);
					}
				}
			}
		}

		&__theme-switcher {
			grid-area: right;
		}

		&__contact-me {
			grid-area: center;
			display: flex;
			justify-content: center;
			align-items: center;
		}

		&__nav {
			display: none;
		}
	}

	:global(.dark-mode) {
		.header {
			&__mobile-logo-container {
				:global(svg) {
					fill: var(--blue-0);
				}
			}
		}
	}

	@media screen and (min-width: breakpoints.$breakpoint--1025) {
		.my-header-placeholder,
		.my-header {
			height: globalPageStyling.$header-height--desktop;
		}

		.header {
			max-width: globalPageStyling.$page-width-for-breakpoint--1025;

			:global(.header__mobile-menu-button) {
				display: none;
			}

			&__theme-switcher {
				grid-area: left;
			}

			&__contact-me {
				grid-area: right;
			}

			&__nav {
				grid-area: center;
				display: flex;
				justify-content: center;
				align-items: center;

				&__list,
				&__list-item {
					display: flex;
					justify-content: center;
					align-items: center;
				}

				&__list-item {
					&:first-of-type {
						margin-left: 0;
					}
				}

				&__link {
					color: var(--blue-100);
					font-size: typography.$desktop-font-size--ML;
					text-decoration: none;

					&--selected {
						font-weight: 700;
						text-decoration: underline;
					}

					&:active {
						color: var(--red-0);
					}

					:global(.dark-mode) & {
						color: var(--blue-0);

						&:active {
							color: var(--red-0);
						}
					}
				}

				&__divider {
					border-left: 2px solid var(--gray-150);
					height: 28px;
					margin-left: 20px;
				}
			}
		}
	}

</style>