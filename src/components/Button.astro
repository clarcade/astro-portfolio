---
interface Props {
	class?: string;
	id: string;
	type: 'primary' | 'secondary' | 'quiet' | 'link--primary';
	link?: string;
}

const {
	class: className = '',
	id,
	type = 'primary',
	link,
} = Astro.props;

const isLinkType = 'link--primary' === type;
---

{isLinkType && link && (
	<a
		id={id}
		class:list={[
			'button--primary',
			className,
		]}
		href={link}
	>
		<slot />
	</a>
)}

{!isLinkType && (
	<button
		id={id}
		class:list={[
			`button--${type}`,
			className,
		]}
	>
		<slot />
	</button>
)}

<style lang='scss'>

	@use '../styles/typography';
	@use '../styles/colors';

	:global(.button--primary) {
		display: flex;
		justify-content: center;
		align-items: center;
		background-color: var(--blue-50);
		padding: 10px 15px;
		font-size: typography.$mobile-font-size--M;
		font-weight: 700;
		color: colors.$white;
		border: none;
		border-radius: 100px;
		cursor: pointer;

		&:hover {
			background-color: var(--blue-100);
		}

		&:active {
			background-color: var(--blue-150);
		}
	}

</style>
