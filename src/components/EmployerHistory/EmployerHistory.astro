---
import Button from '../../components/Button.astro';
import Icon from '../../components/Icon.astro';
import {getMonthShortNameFromDate} from '../../utils/dateUtil';
import EmployerProjectHistory, {
	type EmployerProjectMetadata,
} from './EmployerProjectHistory.astro';

export interface EmployerHistoryData {
	id: string;
	companyName: string;
	fromDate: number;
	toDate: 'Current' | number;
	icon?: string;
	position: string;
	projects: Array<EmployerProjectMetadata>;
}

interface Props {
	data: EmployerHistoryData;
}

const {
	data: {
		id,
		companyName,
		fromDate,
		toDate,
		icon,
		position,
		projects,
	},
} = Astro.props;

// fromDate
const fromDateObject = new Date(fromDate);
const fromDateMonth = getMonthShortNameFromDate(
	fromDateObject,
);
const fromDateYear = fromDateObject.getFullYear();
const companyFromDate = `${fromDateMonth} ${fromDateYear}`;

// toDate
const toDateObject = new Date(toDate);
const companyToDate = toDate === 'Current'
	? toDate
	: `${getMonthShortNameFromDate(toDateObject)} ${toDateObject.getFullYear()}`;

// ids
const collapseButtonId = `collapse-button-${id}`;
const downChevronContainerId = `down-chevron-container-${id}`;
const contentContainerId = `content-container-${id}`;
---

<employer-history
	data-collapsebuttonid={collapseButtonId}
	data-downchevroncontainerid={downChevronContainerId}
	data-contentcontainerid={contentContainerId}
	>
	<section class='employer-history'>
		<div class='employer-history__title-section'>
			<Button
				id={collapseButtonId}
				type='quiet'
				class='employer-history__title-button'
			>
				<div class='employer-history__title-container'>
					{icon && (
						<div class='employer-history__logo-container'>
							<Icon icon={icon} />
						</div>
					)}

					<h3 class='employer-history__company-name'>{companyName}</h3>

					<div
						class='employer-history__down-chevron-container'
						id={downChevronContainerId}
					>
						<Icon icon='down-chevron' />
					</div>
				</div>
			</Button>
		</div>

		<div
			class='employer-history__content-summary'
			id={contentContainerId}
		>
			<div class='employer-history__timeframe'>
				<div class='employer-history__timeframe__contents'>
					{companyFromDate} - {companyToDate}
				</div>
			</div>

			<div class='employer-history__position'>
				<div class='employer-history__position__label'>Position:</div>
				<div class='employer-history__position__value'>{position}</div>
			</div>

			{projects.map((project, i) => (
				<>
					<div class='employer-history__project'>
						<EmployerProjectHistory
							data={project}
						/>
					</div>

					{projects.length > 1 && i !== projects.length - 1 && (
						<hr class='employer-history__project__divider' />
					)}
				</>
			))}
		</div>
	</section>
</employer-history>

<script>

	class EmployerHistory extends HTMLElement {
		connectedCallback() {
			// Read the message from the data attribute.
			const collapseButtonId = this.dataset.collapsebuttonid as string;
			const collapseButtonElement = document.getElementById(collapseButtonId);
			const downChevronContainerId = this.dataset.downchevroncontainerid as string;
			const downChevronContainerElement = document.getElementById(downChevronContainerId);
			const contentContainerId = this.dataset.contentcontainerid as string;
			const contentContainerElement = document.getElementById(contentContainerId);

			// Handle collapse button being pressed
			if (
				collapseButtonElement &&
				downChevronContainerElement &&
				contentContainerElement
			) {
				const collapseButtonHandler = () => {
					downChevronContainerElement.classList.toggle(
						'employer-history__down-chevron-container--rotate',
					);
					contentContainerElement.classList.toggle(
						'visually-hidden',
					);
				};

				collapseButtonElement.addEventListener(
					'click',
					collapseButtonHandler,
				);
			}
		}
	}

	customElements.define('employer-history', EmployerHistory);

</script>

<style lang='scss'>

	.employer-history {
		&__title-section {
			display: flex;
			justify-content: center;
			align-items: center;
		}

		&__title-container {
			align-items: center;
			border-bottom: solid 2px var(--gray-200);
			display: flex;
			justify-content: center;
			position: relative;
		}

		&__logo-container,
		&__down-chevron-container {
			align-items: center;
			display: flex;
			justify-content: center;
		}

		&__logo-container {
			margin-right: 5px;
		}

		&__company-name {
			color: var(--gray-0);
		}

		&__down-chevron-container {
			position: absolute;
			right: -19px;
			transform: rotate(180deg);

			&--rotate {
				transform: rotate(0deg);
			}

			:global(svg) {
				:global(path) {
					fill: var(--gray-0);
				}
			}
		}

		&__timeframe {
			display: flex;
			justify-content: center;
			align-items: center;
			font-weight: 700;

			&__contents {
				display: flex;
				justify-content: center;
				align-items: center;
			}
		}

		&__position {
			display: flex;
			margin-top: 20px;

			&__label {
				margin-right: 10px;
			}

			&__value {
				font-weight: 700;
			}
		}

		&__project {
			margin-top: 20px;

			&__divider {
				border: solid 1px var(--gray-200);
				margin: 40px 0;
			}
		}
	}

	// Need global to override Button styling
	:global(.employer-history__title-button) {
		align-items: center;
		display: flex;
		justify-content: center;
		padding: 10px;
		max-width: 260px;
	}

</style>
